server {
   server_name prsmusa.com;

   root /var/www/prsmusa;
   index index.html;

   server_tokens off;

   access_log /var/log/nginx/prsmusa_access.log;
   error_log /var/log/nginx/prsmusa_error.log;

   client_max_body_size 64M;

   # Handle specific HTML files first (prevents loops)
   location ~* \.html$ {
     try_files $uri =404;
   }

   # Serve the new frontend (SPA routing)
   location / {
     try_files $uri $uri/ /index.html;
   }

   # Serve static assets with proper caching
   location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
     expires 1y;
     add_header Cache-Control "public, immutable";
     try_files $uri =404;
   }

   # Security headers
   add_header X-Frame-Options "SAMEORIGIN" always;
   add_header X-XSS-Protection "1; mode=block" always;
   add_header X-Content-Type-Options "nosniff" always;
   add_header Referrer-Policy "no-referrer-when-downgrade" always;
   add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

   location /pdf {
   autoindex on;
   autoindex_format html;
   }
   location /bible {
     proxy_pass http://127.0.0.1:8000/bible;
   }

   # prsmusa.com backend api
   location = "/api/v0.1" {
   return 302 /api/v0.1/;
   }
   
   location /api/v0.1/{
   proxy_set_header Host $host;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_pass http://127.0.0.1:8002/;
   }
   
   location /gabf_outline {
     proxy_pass http://127.0.0.1:8080/gabf_outline;
   }

   listen 80;
   # SSL configuration will be managed by Certbot when certificates are installed
   # listen 443 ssl; # managed by Certbot
   # ssl_certificate /etc/letsencrypt/live/prsmusa.com/fullchain.pem; # managed by Certbot
   # ssl_certificate_key /etc/letsencrypt/live/prsmusa.com/privkey.pem; # managed by Certbot
   # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# HTTP to HTTPS redirect will be managed by Certbot when certificates are installed
# server {
#     if ($host = prsmusa.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
# 
#     listen 80;
#     server_name prsmusa.com;
#     return 404; # managed by Certbot
# }
